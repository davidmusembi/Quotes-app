{"ast":null,"code":"import { Quotes } from 'src/app/models/quotes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../directives/highlight-quote.directive\";\nimport * as i3 from \"../quotes-details/quotes-details.component\";\nimport * as i4 from \"../quotes-form/quotes-form.component\";\n\nfunction QuotesComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"blockquote\", 15)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"footer\", 16)(5, \"cite\", 17);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"small\", 18);\n    i0.ɵɵlistener(\"click\", function QuotesComponent_div_8_div_1_Template_small_click_8_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.toggleDetails(i_r2);\n    });\n    i0.ɵɵelementStart(9, \"b\", 19);\n    i0.ɵɵtext(10, \"See more\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(quote_r1.quote);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 2, quote_r1.author));\n  }\n}\n\nfunction QuotesComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"blockquote\", 15)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"footer\", 16)(5, \"cite\", 17);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"small\", 18);\n    i0.ɵɵlistener(\"click\", function QuotesComponent_div_8_div_2_Template_small_click_8_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.toggleDetails(i_r2);\n    });\n    i0.ɵɵelementStart(9, \"b\", 21);\n    i0.ɵɵtext(10, \"See more\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(quote_r1.quote);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 2, quote_r1.author));\n  }\n}\n\nfunction QuotesComponent_div_8_app_quotes_details_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-quotes-details\", 22);\n    i0.ɵɵlistener(\"deleteQuote\", function QuotesComponent_div_8_app_quotes_details_3_Template_app_quotes_details_deleteQuote_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.deletingQuote($event, i_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"quote\", quote_r1);\n  }\n}\n\nfunction QuotesComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, QuotesComponent_div_8_div_1_Template, 11, 4, \"div\", 11);\n    i0.ɵɵtemplate(2, QuotesComponent_div_8_div_2_Template, 11, 4, \"div\", 12);\n    i0.ɵɵtemplate(3, QuotesComponent_div_8_app_quotes_details_3_Template, 1, 1, \"app-quotes-details\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.highlightHighest() == quote_r1.upVote && quote_r1.upVote > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.highlightHighest() != quote_r1.upVote || quote_r1.upVote == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", quote_r1.showDetails);\n  }\n}\n\nexport let QuotesComponent = /*#__PURE__*/(() => {\n  class QuotesComponent {\n    constructor() {\n      this.quotes = [new Quotes('Programming is not about what you know; it is about what you can figure out.', 'Chris Pine', 'David Musembi', new Date(2022, 3, 9), 0, 0), new Quotes('The only way to learn a new programming language is by writing programs in it.', 'Dennis Ritchie', 'David Musembi', new Date(2022, 1, 9), 0, 0), new Quotes('Sometimes it is better to leave something alone, to pause, and that is very true of programming.', 'Joyce Wheeler', 'David Musembi', new Date(2021, 4, 9), 0, 0), new Quotes('Testing leads to failure, and failure leads to understanding.', ' Burt Rutan', 'Brian Musembi', new Date(2022, 4, 9), 0, 0), new Quotes('The best error message is the one that never shows up.', 'homas Fuchs', 'David Musembi', new Date(2022, 4, 9), 0, 0), new Quotes('The most damaging phrase in the language is.. it is always been done this way', 'Grace Hopper', 'David Musembi', new Date(2022, 4, 9), 0, 0)];\n    } //function for ading a new quote\n\n\n    addNewQuote(quote) {\n      this.quotes.push(quote);\n    } //function for toggling small text\n\n\n    toggleDetails(index) {\n      this.quotes[index].showDetails = !this.quotes[index].showDetails;\n    } //function for deleting quote\n\n\n    deletingQuote(deleteQuote, index) {\n      if (deleteQuote) {\n        let toDelete = confirm(\"Are you sure you want to delete this quote?\");\n\n        if (toDelete) {\n          this.quotes.splice(index, 1);\n        }\n      }\n    } //function for getting the quote with the highest upvotes\n    // initialValue:number\n    // newValue:number\n    // counter:number\n    // highlightHighest(){\n    //    this.initialValue=0\n    //    this.newValue=0\n    //    for (this.counter=0; this.counter<this.quotes.length; this.counter++){\n    //        this.newValue =this.quotes[this.counter].upVote;\n    //        if(this.newValue > this.initialValue){\n    //            this.initialValue =this.newValue\n    //        }\n    //        return this.initialValue\n    //    }\n    // }\n\n\n    highlightHighest() {\n      let quotesUpvote = [];\n      let highestUpVote;\n\n      for (let j = 0; j < this.quotes.length; j++) {\n        quotesUpvote.push(this.quotes[j].upVote);\n      }\n\n      quotesUpvote.sort(function (a, b) {\n        return b - a;\n      });\n      highestUpVote = quotesUpvote[0];\n      return highestUpVote;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  QuotesComponent.ɵfac = function QuotesComponent_Factory(t) {\n    return new (t || QuotesComponent)();\n  };\n\n  QuotesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuotesComponent,\n    selectors: [[\"app-quotes\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[1, \"container-fluid\"], [1, \"header\"], [1, \"text-center\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"cards\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-2\"], [1, \"col-sm-8\"], [3, \"addQuotes\"], [1, \"card\"], [\"class\", \"card-body\", \"appHighlightQuote\", \"\", 4, \"ngIf\"], [\"class\", \"card-body\", 4, \"ngIf\"], [3, \"quote\", \"deleteQuote\", 4, \"ngIf\"], [\"appHighlightQuote\", \"\", 1, \"card-body\"], [1, \"blockquote\", \"mb-0\", \"card-body\"], [1, \"blockquote-footer\"], [\"title\", \"Source Title\", 2, \"color\", \"rgb(255, 255, 255)\"], [2, \"float\", \"right\", \"font-size\", \"0.7rem\", 3, \"click\"], [2, \"color\", \"rgb(250, 248, 249)\", \"cursor\", \"pointer\"], [1, \"card-body\"], [2, \"color\", \"rgb(255, 255, 255)\", \"cursor\", \"pointer\"], [3, \"quote\", \"deleteQuote\"]],\n    template: function QuotesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Programming Quotes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5);\n        i0.ɵɵtemplate(8, QuotesComponent_div_8_Template, 4, 3, \"div\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelement(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"app-quotes-form\", 9);\n        i0.ɵɵlistener(\"addQuotes\", function QuotesComponent_Template_app_quotes_form_addQuotes_12_listener($event) {\n          return ctx.addNewQuote($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"div\", 7);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.quotes);\n      }\n    },\n    directives: [i1.NgForOf, i1.NgIf, i2.HighlightQuoteDirective, i3.QuotesDetailsComponent, i4.QuotesFormComponent],\n    pipes: [i1.TitleCasePipe],\n    styles: [\".container-fluid[_ngcontent-%COMP%]{padding:0;overflow-x:hidden}.header[_ngcontent-%COMP%]{background:rgb(0,0,0);color:#fff;padding-bottom:2px}h1[_ngcontent-%COMP%]{font-family:Special Elite,cursive;font-size:30px;padding-top:4px}.card[_ngcontent-%COMP%]{margin:3%;width:20rem;transform:translateY(-3px);box-shadow:0 4px 17px #00000059;transition:all .3s ease-in-out;background:black;color:#fff}.card[_ngcontent-%COMP%]:hover{transform:translateY(-7px)}.cards[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;margin-left:6%}.blockquote[_ngcontent-%COMP%]{font-size:1rem;color:#fff}\"]\n  });\n  return QuotesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}